pos_counts$pos.words
# Number of words
( n_words = pos_counts$wc )
# Verify the polarity score
( pos_score_manual = n_good / sqrt(n_words) )
( pos_score = polarity(positive) )
# Verify the polarity score
( pos_score_manual = n_good / sqrt(n_words) )
stressed_out = "I wish I found some better sounds no ones ever heard\nI wish I had a better voice that sang some better words\nI wish I found some chords in an order that is new\nI wish I didnt have to rhyme every time I sang\nI was told when I get older all my fears would shrink\nBut now Im insecure and I care what people think\nMy names Blurryface and I care what you think\nMy names Blurryface and I care what you think\nWish we could turn back time, to the good old days\nWhen our momma sang us to sleep but now were stressed out\nWish we could turn back time to the good old days\nWhen our momma sang us to sleep but now were stressed out\nWere stressed out\nSometimes a certain smell will take me back to when I was young\nHow come Im never able to identify where its coming from\nId make a candle out of it if I ever found it\nTry to sell it never sell out of it Id probably only sell one\nItd be to my brother, cause we have the same nose\nSame clothes homegrown a stones throw from a creek we used to roam\nBut it would remind us of when nothing really mattered\nOut of student loans and tree-house homes we all would take the latter\nMy names Blurryface and I care what you think\nMy names Blurryface and I care what you think\nWish we could turn back time, to the good old days\nWhen our momma sang us to sleep but now were stressed out\nWish we could turn back time, to the good old days\nWhen our momma sang us to sleep but now were stressed out\nWe used to play pretend, give each other different names\nWe would build a rocket ship and then wed fly it far away\nUsed to dream of outer space but now theyre laughing at our face #\nSaying, Wake up you need to make money\nYeah\nWe used to play pretend give each other different names\nWe would build a rocket ship and then wed fly it far away\nUsed to dream of outer space but now theyre laughing at our face\nSaying, Wake up, you need to make money\nYeah\nWish we could turn back time, to the good old days\nWhen our momma sang us to sleep but now were stressed out\nWish we could turn back time, to the good old days\nWhen our momma sang us to sleep but now were stressed out\nUsed to play pretend, used to play pretend bunny\nWe used to play pretend wake up, you need the money\nUsed to play pretend used to play pretend bunny\nWe used to play pretend, wake up, you need the money\nWe used to play pretend give each other different names\nWe would build a rocket ship and then wed fly it far away\nUsed to dream of outer space but now theyre laughing at our face\nSaying, Wake up, you need to make money\nYeah"
polarity(stressed_out)
key.pol
qdap::key.pol
key.pol[grep("stress", x)]
negative.words
polarity(stressed_out, polarity.frame = custom_pol)
custom_pol <- sentiment_frame(positive.words , c(negative.words, "stressed", "turn back"))
polarity(stressed_out, polarity.frame = custom_pol)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
library(tidyverse)
library(tidytext)
afinn_lex = get_sentiments("afinn")
afinn_lex %>%
count(value)
nrc_lex = get_sentiments("nrc")
nrc_lex %>%
count(sentiment)
loughran_lex = get_sentiments("loughran")
loughran_lex %>%
count(sentiment)
nrc_lex = get_sentiments("nrc")
nrc_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(nrc_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col() +
theme_gdocs()
nrc_lex = get_sentiments("nrc")
nrc_counts = nrc_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(nrc_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col() +
theme_gdocs()
nrc_lex = get_sentiments("nrc")
nrc_counts = nrc_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(nrc_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col() +
theme()
nrc_lex = get_sentiments("nrc")
nrc_counts = nrc_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(nrc_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col()
bing_lex = get_sentiments("bing")
bing_lex %>%
count(sentiment)
bing_lex = get_sentiments("bing")
bing_counts = bing_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(bing_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col()
loughran_lex = get_sentiments("loughran")
loughran_counts = loughran_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(loughran_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col()
afinn_lex = get_sentiments("afinn")
afinn_counts = afinn_lex %>%
count(value)
# Plot n vs. sentiment
ggplot(afinn_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col()
afinn_lex = get_sentiments("afinn")
afinn_counts = afinn_lex %>%
count(value)
# Plot n vs. sentiment
ggplot(afinn_counts, aes(x = value, y = n)) +
# Add a col layer
geom_col()
afinn_lex
ggplot(afinn_lex, aes(x = value)) + geom_histogram()
afinn_lex = get_sentiments("afinn")
afinn_counts = afinn_lex %>%
count(value)
# Plot n vs. sentiment
ggplot(afinn_counts, aes(x = value, y = n)) +
# Add a col layer
geom_col()
reviews = read_csv("Datasets/Roomba Reviews.csv")
reviews = reviews %>%
mutate(id = row_number())
tokenised_reviews = reviews %>%
unnest_tokens(term, Review)
(tokenised_reviews = reviews %>%
unnest_tokens(term, Review))
stop_words
clean_tokens = tokenised_reviews %>%
anti_join(stop_words, by = c("term" = "word"))
( clean_tokens = tokenised_reviews %>%
anti_join(stop_words, by = c("term" = "word")) )
# get the bing lexicon
bing = get_sentiments("bing")
# inner_join()
labelled_tokens = clean_tokens %>%
inner_join(bing, by = c("term" = "word"))
# Count the sentiment
labelled_tokens %>%
count(sentiment)
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n)  )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n)  )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n, fill = 0)  )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, as.numeric(id)) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n, fill = 0)  )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n, fill = 0)  )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, as.character(id)) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n, fill = 0)  )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n, fill = 0)  )
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, as.numeric(id)) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n, fill = 0)  )
reviews = reviews %>%
mutate(id = as.numeric(row_number()))
( reviews = reviews %>%
mutate(id = as.numeric(row_number())) )
View(reviews)
( tokenised_reviews = reviews %>%
unnest_tokens(term, Review) )
( clean_tokens = tokenised_reviews %>%
anti_join(stop_words, by = c("term" = "word")) )
# get the bing lexicon
bing = get_sentiments("bing")
# inner_join()
labelled_tokens = clean_tokens %>%
inner_join(bing, by = c("term" = "word"))
# Count the sentiment
labelled_tokens %>%
count(sentiment)
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
spread(sentiment, n, fill = 0)  )
labelled_tokens
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
count(sentiment, id) %>%
spread(sentiment, n, fill = 0)  )
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
afinn_lex = get_sentiments("afinn")
afinn_counts = afinn_lex %>%
count(value)
# Plot n vs. sentiment
ggplot(afinn_counts, aes(x = value, y = n)) +
# Add a col layer
geom_col()
nrc_lex = get_sentiments("nrc")
nrc_counts = nrc_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(nrc_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col()
loughran_lex = get_sentiments("loughran")
loughran_counts = loughran_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(loughran_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col()
bing_lex = get_sentiments("bing")
bing_counts = bing_lex %>%
count(sentiment)
# Plot n vs. sentiment
ggplot(bing_counts, aes(x = sentiment, y = n)) +
# Add a col layer
geom_col()
reviews = read_csv("Datasets/Roomba Reviews.csv")
( reviews = reviews %>%
mutate(id = as.numeric(row_number())) )
( tokenised_reviews = reviews %>%
unnest_tokens(term, Review) )
( clean_tokens = tokenised_reviews %>%
anti_join(stop_words, by = c("term" = "word")) )
# get the bing lexicon
bing = get_sentiments("bing")
# inner_join()
labelled_tokens = clean_tokens %>%
inner_join(bing, by = c("term" = "word"))
# Count the sentiment
labelled_tokens %>%
count(sentiment)
# Count the sentiment for each document
( labelled_tokens %>%
count(sentiment, id) )
( wider_labelled_tokens = labelled_tokens %>%
count(sentiment, id) %>%
spread(sentiment, n, fill = 0)  )
wider_labelled_tokens = wider_labelled_tokens %>%
mutate(polarity = positive - negative)
( wider_labelled_tokens = wider_labelled_tokens %>%
mutate(polarity = positive - negative) )
# 畫出polarity scores在corpus中的變化
ggplot(wider_labelled_tokens, aes(x = id, y = polarity)) +
geom_smooth()
# 計算每一個document (每一個id) 的 polarity score
( wider_labelled_tokens = wider_labelled_tokens %>%
mutate(polarity = positive - negative) )
# 畫出polarity scores在corpus中的變化
ggplot(wider_labelled_tokens, aes(x = id, y = polarity)) +
geom_smooth()
geom_smooth()
help(geom_smooth)
# 畫出polarity scores在corpus中的變化
ggplot(wider_labelled_tokens, aes(x = id, y = polarity)) +
geom_smooth(method = 'lm)
# 畫出polarity scores在corpus中的變化
ggplot(wider_labelled_tokens, aes(x = id, y = polarity)) +
geom_smooth(method = 'lm')
# 畫出polarity scores在corpus中的變化
ggplot(wider_labelled_tokens, aes(x = id, y = polarity)) +
geom_smooth(method = "lm")
# 畫出polarity scores在corpus中的變化
ggplot(wider_labelled_tokens, aes(x = id, y = polarity)) +
geom_point() +
geom_smooth(method = "lm")
# 畫出polarity scores在corpus中的變化
ggplot(wider_labelled_tokens, aes(x = id, y = polarity)) +
geom_point() +
geom_smooth()
view(readRDS("Datasets/all_books.rds"))
view(readRDS("Datasets/bos_pol.rds"))
view(readRDS("Datasets/all_book_polarity.rds"))
afinn = get_sentiments("afinn")
( afinn_tokens = clean_tokens %>%
inner_join(afinn, by = c("term" = "word")) )
View(afinn_tokens)
afinn_score = afinn_tokens %>%
group_by(id) %>%
summarise(polarity = sum(value))
View(afinn_score)
( afinn_score = afinn_tokens %>%
group_by(id) %>%
summarise(polarity = sum(value)) )
view( afinn_score = afinn_tokens %>%
group_by(id) %>%
summarise(polarity = sum(value)) )
view(afinn_tokens %>%
count(value, id) %>%
group_by(id) %>%
summarise(polarity = sum(value*n)))
( afinn_score = afinn_tokens %>%
group_by(id) %>%
summarise(polarity = sum(value)) )
ggplot(afinn_score, aes(x = id, y = polarity)) +
geom_smooth()
ggplot(afinn_score, aes(x = id, y = polarity)) +
geom_point()
ggplot(afinn_score, aes(x = id, y = polarity)) +
geom_point() +
geom_smooth()
nrc = get_sentiments("nrc")
( nrc_tokens = clean_tokens %>%
inner_join(nrc, by = c("term" = "word")) )
View(nrc_tokens)
tokens_count = clean_tokens %>%
count(term)
( tokens_count = clean_tokens %>%
count(term) )
( tokens_count = clean_tokens %>%
count(id, term) )
( nrc_tokens = tokens_count %>%
inner_join(nrc, by = c("term" = "word")) )
( Plutchik_nrc_tokens = nrc_tokens %>%
filter(!sentiment %in% c("positive", "negative")) %>%
group_by(sentiment) %>%
summarise(total_score = sum(count)) )
( Plutchik_nrc_tokens = nrc_tokens %>%
filter(!sentiment %in% c("positive", "negative")) %>%
group_by(sentiment) %>%
summarise(total_score = sum(count)) )
( Plutchik_nrc_tokens = nrc_tokens %>%
filter(!sentiment %in% c("positive", "negative")) %>%
group_by(sentiment) %>%
summarise(total_score = sum(n)) )
( Plutchik_nrc_tokens = nrc_tokens %>%
filter(!sentiment %in% c("positive", "negative")) %>%
group_by(sentiment) %>%
summarise(total_count = sum(n)) )
ggplot(Plutchik_nrc_tokens, aes(x = sentiment, y = total_count)) +
# Add a column geom
geom_col()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
readRDS("Datasets/bos_reviews.rds")
view(readRDS("Datasets/bos_reviews.rds"))
reviews = read_csv("Datasets/Roomba Reviews.csv")
bing = get_sentiments("bing")
tidy_reviews = reviews %>%
mutate(id = row_number()) %>%
unnest_tokens(term, Review) %>%
anti_join(stop_words, by = c("term" = "word"))
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment) %>%
spread(sentiment, n) %>%
mutate(polarity = positive - negative)
View(reviews_polarity)
View(tidy_reviews)
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word"))
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment)
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment) %>%
spread(sentiment, n) %>%
replace_na(0)
reviews = read_csv("Datasets/Roomba Reviews.csv")
bing = get_sentiments("bing")
tidy_reviews = reviews %>%
mutate(id = row_number()) %>%
unnest_tokens(term, Review) %>%
anti_join(stop_words, by = c("term" = "word"))
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment) %>%
spread(sentiment, n)
reviews_polarity[is.na(reviews_polarity)]
reviews_polarity = reviews_polarity %>%
mutate(polarity = positive - negative)
reviews = read_csv("Datasets/Roomba Reviews.csv")
bing = get_sentiments("bing")
tidy_reviews = reviews %>%
mutate(id = row_number()) %>%
unnest_tokens(term, Review) %>%
anti_join(stop_words, by = c("term" = "word"))
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment) %>%
spread(sentiment, n)
reviews_polarity[is.na(reviews_polarity)] = 0
reviews_polarity = reviews_polarity %>%
mutate(polarity = positive - negative)
reviews = read_csv("Datasets/Roomba Reviews.csv")
bing = get_sentiments("bing")
tidy_reviews = reviews %>%
mutate(id = row_number()) %>%
unnest_tokens(term, Review) %>%
anti_join(stop_words, by = c("term" = "word"))
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment) %>%
spread(sentiment, n)
reviews_polarity[is.na(reviews_polarity)] = 0
reviews_polarity = reviews_polarity %>%
mutate(polarity = positive - negative, line_number = row_number())
reviews = read_csv("Datasets/Roomba Reviews.csv")
bing = get_sentiments("bing")
tidy_reviews = reviews %>%
mutate(id = row_number()) %>%
unnest_tokens(term, Review) %>%
anti_join(stop_words, by = c("term" = "word"))
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment) %>%
spread(sentiment, n)
reviews_polarity[is.na(reviews_polarity)] = 0
reviews_polarity = reviews_polarity %>%
mutate(polarity = positive - negative)
reviews_polarity %>%
ggplot(aes(x = id, y = polarity)) +
geom_smooth() +
geom_hline(yintercept = 0, col = "red")
reviews_polarity %>%
ggplot(aes(x = polarity)) +
geom_histogram()
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(polarity = positive - negative)
reviews_label = reviews_polarity %>%
filter(abs(polarity) >= 10) %>%
mutate(sentiment_label = ifelse(polarity > 0, "positive", "negative"))
View(reviews_label)
reviews_label = reviews_polarity %>%
filter(abs(polarity) >= 20) %>%
mutate(sentiment_label = ifelse(polarity > 0, "positive", "negative"))
View(tidy_reviews)
View(reviews_polarity)
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word"))
reviews_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(id, sentiment)
terms_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(term, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(polarity = positive - negative)
View(terms_polarity)
terms_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(term, sentiment)
terms_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(term, sentiment) %>%
spread(sentiment, n, fill = 0
)
terms_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(term, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(polarity = positive - negative)
terms_label = reviews_polarity %>%
filter(abs(polarity) >= 20) %>%
mutate(sentiment_label = ifelse(polarity > 0, "positive", "negative"))
terms_polarity = tidy_reviews %>%
inner_join(bing, by = c("term" = "word")) %>%
count(term, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(polarity = positive - negative)
terms_label = terms_polarity %>%
filter(abs(polarity) >= 20) %>%
mutate(sentiment_label = ifelse(polarity > 0, "positive", "negative"))
View(terms_label)
View(terms_polarity)
terms_label = terms_polarity %>%
filter(abs(polarity) >= 50) %>%
mutate(sentiment_label = ifelse(polarity > 0, "positive", "negative"))
ggplot(terms_label, aes(x = aes(reorder(term, polarity), polarity, fill = sentiment_label))) +
geom_col() +
ggtitle("Sentiment Word Frequency")
# Visualisation
ggplot(terms_label, aes(x = aes(reorder(term, polarity), y = polarity, fill = sentiment_label))) +
geom_col() +
ggtitle("Sentiment Word Frequency") +
theme
# Visualisation
ggplot(terms_label, aes(x = reorder(term, polarity), y = polarity, fill = sentiment_label))) +
# Visualisation
ggplot(terms_label, aes(x = reorder(term, polarity), y = polarity, fill = sentiment_label)) +
geom_col() +
ggtitle("Sentiment Word Frequency") +
theme
ggplot(terms_label, aes(x = reorder(term, polarity), y = polarity, fill = sentiment_label)) +
geom_col() +
ggtitle("Sentiment Word Frequency")
# Visualisation
ggplot(terms_label, aes(x = reorder(term, polarity), y = polarity, fill = sentiment_label)) +
geom_col() +
ggtitle("Sentiment Word Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = -0.1))
terms_label = terms_polarity %>%
filter(abs(polarity) >= 60) %>%
mutate(sentiment_label = ifelse(polarity > 0, "positive", "negative"))
# Visualisation
ggplot(terms_label, aes(x = reorder(term, polarity), y = polarity, fill = sentiment_label)) +
geom_col() +
ggtitle("Sentiment Word Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = -0.1))
